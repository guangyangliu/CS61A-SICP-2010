#lang simply-scheme

(define (make-mobile left right)
  (list left right))

(define (make-branch length structure)
  (list length structure))

(define (left-branch mobile)
  (car mobile))

(define (right-branch mobile)
  (cadr mobile))

(define (branch-length branch)
  (car branch))

(define (branch-structure branch)
  (cadr branch))


(define (weight number) number)

(define a
  (make-mobile
   (make-branch 1 (weight 2))
   (make-branch 3 (make-mobile
                   (make-branch 4 (weight 5))
                   (make-branch 6 (weight 7))))))

a


(define (total-weight mobile)
  (cond ((null? mobile) 0)
        ((number? (branch-structure (left-branch mobile)))
         (+ (branch-structure (left-branch mobile))
            (total-weight (right-branch mobile))))
        ((null? (branch-structure (left-branch mobile)))
         (total-weight (right-branch mobile)))
        (else (+ (total-weight (left-branch mobile))
                  (total-weight (right-branch mobile))))))



(trace total-weight)
(total-weight a)